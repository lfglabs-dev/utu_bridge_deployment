# Define a map to check allowed methods
# map $request_body $is_allowed_method {
#     default 0;
#     "~*\"method\"\\s*:\\s*\"(getblockheader|getblock|getblockhash|gettxoutproof|getrawtransaction)\"" 1;
# }

server {
    listen 80;
    server_name btcrpc.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name btcrpc.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/btcrpc.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/btcrpc.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    # JSON-RPC endpoint
    location /rpc {
        proxy_pass http://btc:8332/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Content-Type "text/plain";

        # Hardcode the username and password
        proxy_set_header Authorization "Basic c2F0b3NoaTpkOVpkM0JqcFV1WUFPME94c21yS1huRi1hbm1LQmxIQnlUYVdFbDhrSTVB";

        # Only allow POST method
        limit_except POST {
            deny all;
        }

        # Restrict JSON-RPC methods using map
        # if ($is_allowed_method = 0) {
        #     return 403 "Forbidden method";
        # }
    }

    # Hardcoded response for root path
    location = / {
        add_header Content-Type "text/plain; charset=utf-8";  # Ensure charset is specified in the Content-Type header
        return 200 "
        â‚¿itcoin JSON-RPC Service
        ------------------------
        Powered by LFG Labs
        https://lfglabs.dev

        We graciously provide access to a part of our Bitcoin Core node JSON-RPC API.
        Available endpoints:
        - getblockheader
        - getblock
        - getblockhash
        - gettxoutproof
        - getrawtransaction
        Please use POST requests to /rpc with your JSON-RPC payload.

        Happy hashing! ðŸš€
        ";
    }

    # Deny all other requests (lowest priority)
    location / {
        deny all;
    }
}

server {
    listen 80;
    server_name ord.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ord.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/ord.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ord.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://ord:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 80;
    server_name api.utu.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.utu.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/api.utu.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.utu.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://utu_api:8081/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 80;
    server_name auto-claim.utu.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name auto-claim.utu.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/auto-claim.utu.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auto-claim.utu.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://utu_bridge_deposit_request:8082/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Timeout settings
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }
}

server {
    listen 80;
    server_name signer.deposit.utu.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name signer.deposit.utu.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/signer.deposit.utu.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/signer.deposit.utu.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://utu_bridge_deposit_signer:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 80;
    server_name signer.withdrawals.utu.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name signer.withdrawals.utu.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/signer.withdrawals.utu.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/signer.withdrawals.utu.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://utu_bridge_withdrawals_signer:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 80;
    server_name dispatcher.withdrawals.utu.lfg.rs;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name dispatcher.withdrawals.utu.lfg.rs;

    ssl_certificate /etc/letsencrypt/live/dispatcher.withdrawals.utu.lfg.rs/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dispatcher.withdrawals.utu.lfg.rs/privkey.pem;

    # ACME challenge location (highest priority)
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        proxy_pass http://utu_bridge_withdrawals_dispatcher:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
